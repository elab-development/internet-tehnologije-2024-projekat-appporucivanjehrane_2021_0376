/* eslint-disable @typescript-eslint/no-explicit-any */
import axios from "axios";
import { create } from "zustand";
import { toast } from "react-toastify";

import { Restaurant } from "../lib/TypesData";

axios.defaults.withCredentials = true;

const API_URL_RESTAURANTS = "http://localhost:8000/api/restaurants";

interface RestaurantState {
  restaurants: Restaurant[];
  restaurant: Restaurant | null;
  isLoading: boolean;
  error: string | null;

  getAllRestaurants: () => Promise<void>;
  getVerifiedRestaurants: () => Promise<void>;
  getRestaurantById: (restaurantId: string) => Promise<void>;
  verifyRestaurant: (restaurantId: string, commission: number) => Promise<void>;
}

export const useRestaurantStore = create<RestaurantState>((set) => ({
  restaurants: [],
  restaurant: null,
  error: null,
  isLoading: false,

  // GET ALL RESTAURANTS
  getAllRestaurants: async () => {
    set({ isLoading: true, error: null });
    try {
      const response = await axios.get(`${API_URL_RESTAURANTS}`);

      set({
        restaurants: response.data.restaurants,
        isLoading: false,
      });
    } catch (error: any) {
      toast.error(
        error?.response?.data?.message ||
          "Something went wrong while fetching restaurants",
      );
      set({ isLoading: false });
      throw error;
    }
  },

  // GET VERIFIED RESTAURANTS
  getVerifiedRestaurants: async () => {
    set({ isLoading: true, error: null });
    try {
      const response = await axios.get(`${API_URL_RESTAURANTS}/verified`);

      set({
        restaurants: response.data.restaurants,
        isLoading: false,
      });
    } catch (error: any) {
      toast.error(
        error?.response?.data?.message ||
          "Something went wrong while fetching restaurants",
      );
      set({ isLoading: false });
      throw error;
    }
  },

  // GET RESTAURANT BY ID
  getRestaurantById: async (restaurantId: string) => {
    set({ isLoading: true, error: null });
    try {
      const response = await axios.get(
        `${API_URL_RESTAURANTS}/${restaurantId}`,
      );

      set({
        restaurant: response.data.restaurant,
        isLoading: false,
      });
    } catch (error: any) {
      toast.error(
        error?.response?.data?.message ||
          "Something went wrong while fetching restaurant",
      );
      set({ isLoading: false });
      throw error;
    }
  },

  // VERIFY RESTAURANT
  verifyRestaurant: async (restaurantId: string, commission: number) => {
    set({ isLoading: true, error: null });
    try {
      const response = await axios.put(
        `${API_URL_RESTAURANTS}/${restaurantId}/verify`,
        {
          commission,
        },
      );

      if (response.data.success) {
        const getResponse = await axios.get(`${API_URL_RESTAURANTS}`);
        set({
          restaurants: getResponse.data.restaurants,
          isLoading: false,
        });
      }
    } catch (error: any) {
      toast.error(
        error?.response?.data?.message ||
          "Something went wrong while verifying restaurant",
      );
      set({ isLoading: false });
      throw error;
    }
  },
}));